{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","e","Audio","target","dataset","sound","play","_React$createElement","react_default","a","createElement","class","align","className","src","alt","width","onClick","this","playInstrument","data-sound","Object","defineProperty","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oLCgDzBC,sMA3CEC,GACK,IAAIC,MAAMD,EAAEE,OAAOC,QAAQC,OACjCC,wCAGL,IAAAC,EACP,OACIC,EAAAC,EAAAC,cAAA,WAASC,MAAM,YAAYC,MAAM,UAC/BJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKI,IAAI,oDAAoDC,IAAI,WAAWC,MAAM,UAGpFR,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACbL,EAAAC,EAAAC,cAAA,0BAGFF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aAAaI,QAASC,KAAKC,eAAgBP,MAAM,QAC9DJ,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,OAAKI,IAAI,oDAAoDC,IAAI,+BAA+BF,UAAU,QAAQG,MAAM,QACxHR,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,OAAKI,IAAI,kDAAkDC,IAAI,uBAAuBF,UAAU,QAAQG,MAAM,QAC9GR,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,OAAKI,IAAI,yDAAyDC,IAAI,iBAAiBF,UAAU,QAAQG,MAAM,QAC/GR,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,OAAKI,IAAI,6DAA6DC,IAAI,0BAA0BK,aAAW,kBAAkBP,UAAU,QAAQG,MAAM,QACzJR,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,OAAAH,EAAA,CAAKO,IAAI,2CAA2CC,IAAI,SAAxDM,OAAAC,EAAA,EAAAD,CAAAd,EAAA,MAAoE,uBAApEc,OAAAC,EAAA,EAAAD,CAAAd,EAAA,YAAoG,SAApGc,OAAAC,EAAA,EAAAD,CAAAd,EAAA,QAAkH,OAAlHA,IACAC,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,OAAKI,IAAI,uDAAuDC,IAAI,iCAAiCK,aAAW,qBAAqBP,UAAU,QAAQG,MAAM,QAC7JR,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,OAAKI,IAAI,gDAAgDC,IAAI,2BAA2BK,aAAW,uBAAuBP,UAAU,QAAQG,MAAM,QAClJR,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,OAAKI,IAAI,8CAA8CC,IAAI,uBAAuBF,UAAU,QAAQG,MAAM,QAC1GR,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,OAAKI,IAAI,6CAA6CC,IAAI,0BAA0BF,UAAU,QAAQG,MAAM,QAC5GR,EAAAC,EAAAC,cAAA,6BArCMa,cCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtB,EAAAC,EAAAC,cAACqB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.fe34cda6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  playInstrument(e) {\n    var prettySound = new Audio(e.target.dataset.sound);\n    prettySound.play();\n  }\n\n  render() {\n    return (\n        <section class=\"container\" align=\"center\">\n          <div className=\"left-half\">\n            <img src=\"pics/TimelinePhotos/AnaandJared_Christmas2008.jpg\" alt=\"Timeline\" width=\"1000\" />\n          </div>\n\n          <div className=\"text-block\">\n            <p>Stacy Layton</p>\n          </div>\n\n          <div className=\"right-half\" onClick={this.playInstrument} align=\"left\">\n            <p>LAYTON FAMILY TIMELINE</p>\n            <p>2002</p>\n            <img src=\"pics/TimelinePhotos/AnaandJared_Christmas2008.jpg\" alt=\"Ana and Jared Christmas 2008\" className=\"input\" width=\"400\" />\n            <p>2003</p>\n            <img src=\"pics/TimelinePhotos/AnaChristmasTimeCabelas.jpg\" alt=\"Christmas at Cabelas\" className=\"input\" width=\"400\" />\n            <p>2004</p>\n            <img src=\"pics/TimelinePhotos/AnaJaredandStacy_Christmas2008.jpg\" alt=\"Christmas 2008\" className=\"input\" width=\"400\" />\n            <p>2005</p>\n            <img src=\"pics/TimelinePhotos/Aug2010FamilyReunionCoeurDLeneLake.jpg\" alt=\"Family Reunion Aug 2010\" data-sound=\"music/banjo.mp3\" className=\"input\" width=\"400\" />\n            <p>2006</p>\n            <img src=\"pics/TimelinePhotos/BabyJaredwithAna.JPG\" alt=\"cello\" alt=\"Baby Jared with Ana\" className=\"input\" width=\"400\" />\n            <p>2007</p>\n            <img src=\"pics/TimelinePhotos/BattlegroundLake_VancouverWA.jpg\" alt=\"Battleground Lake Vancouver WA\" data-sound=\"music/clarinet.mp3\" className=\"input\" width=\"400\" />\n            <p>2008</p>\n            <img src=\"pics/TimelinePhotos/GreatGrandpaLeeHarris.jpg\" alt=\"Great Grandpa Lee Harris\" data-sound=\"music/snare-drum.mp3\" className=\"input\" width=\"400\" />\n            <p>2009</p>\n            <img src=\"pics/TimelinePhotos/Jared_Christmas2008.jpg\" alt=\"Jared Christmas 2008\" className=\"input\" width=\"400\" />\n            <p>2010</p>\n            <img src=\"pics/TimelinePhotos/JaredChristmas2008.jpg\" alt=\"Jared Christmas on 2008\" className=\"input\" width=\"400\" />\n            <p>THE END</p>\n          </div>\n        </section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}